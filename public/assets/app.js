angular.module("app",["ngRoute","ui.router"]),angular.module("app").run(["$http","$window",function(e,t){e.defaults.headers.common["x-auth"]=t.sessionStorage.user_token}]),angular.module("app").controller("adminCtrl",["$scope","$http","auth","$location","$timeout",function(e,t,o,n,r){e.loading=!0,e.setup=function(){t.get("/api/users").then(function(t){e.model=t.data,e.loading=!1},function(t){401==t.status&&(e.authFail=!0,r(function(){n.path("/login")},3e3))})},e.setup(),e.logout=function(){o.logout()}}]),angular.module("app").controller("loginCtrl",["$scope","auth","$location","$timeout",function(e,t,o,n){console.log("login controller"),e.authFail=!1,e.login=function(o,r){t.login(o,r).then(function(e){t.storeToken(e.data,function(){t.getUser().then(function(e){t.postLoginOps(e.data,function(){t.postLoginRouteHandler()})})})})["catch"](function(t){console.error("Gists error",t.status,t.data),401==t.status&&(e.authFail=!0,n(function(){e.authFail=!1},3e3))})["finally"](function(){console.log("finally finished gists")})}}]),angular.module("app").controller("masterCtrl",["$scope","$rootScope","$route",function(e,t,o){console.log("masterCtrl"),localStorage.getItem("logged_user")&&(t.currentUser=localStorage.getItem("logged_user")),e.$on("login",function(o,n){console.log("Logged In"),e.currentUser=n,t.currentUser=n,localStorage.setItem("logged_user",t.currentUser.username)})}]),angular.module("app").controller("registerCtrl",["$scope","auth","$location",function(e,t,o){e.register=function(n,r,l){t.register(n,r,l).then(function(n){t.login(r,l),e.$emit("login",n.data),o.path("/admin")})["catch"](function(e){console.log(e)})}}]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,o){t.otherwise("/"),e.state("app",{url:"/",views:{content:{templateUrl:"/landing.html",controller:"userRegisterCtrl"}}}).state("login",{url:"/login",views:{content:{templateUrl:"/login.html",controller:"loginCtrl"}}}).state("register",{url:"/efb82ec7a1a0e477a33e209dacd2a1e0",views:{content:{templateUrl:"/register.html",controller:"registerCtrl"}}}).state("admin",{url:"/admin",views:{nav:{templateUrl:"/nav.html",controller:"adminCtrl"},content:{templateUrl:"/admin.html",controller:"adminCtrl"}}}),o.html5Mode(!0)}]),angular.module("app").controller("userRegisterCtrl",["$scope","$http",function(e,t){e.setup=function(){e.model={}},e.setup(),e.saveUser=function(){console.log("inside the func"),t.post("/api/users",{name:e.model.name,phone:e.model.phone,email:e.model.email}).then(function(t){console.log(t),$("#thanks").show().delay(5e3).fadeOut(),e.setup()},function(e){console.log(e)})},console.log("here in landing")}]),angular.module("app").service("auth",["$http","$window","$location","$rootScope",function(e,t,o,n){function r(){return e.get("api/admin")}function l(t,o){return e.post("api/sessions",{username:t,password:o})}function a(t,o,n){return e.post("api/admin",{name:t,username:o,password:n})}function i(){localStorage.removeItem("user_token"),localStorage.removeItem("logged_user"),t.sessionStorage.removeItem("user_token"),delete e.defaults.headers.common["x-auth"],n.isLogged=!1,n.currentUser=null,o.path("/login")}function u(o,n){t.sessionStorage.user_token=o,localStorage.setItem("user_token",o),e.defaults.headers.common["x-auth"]=t.sessionStorage.user_token,n&&"function"==typeof n&&n()}function s(){}function c(e,t){n.currentUser=e.name,localStorage.setItem("logged_user",n.currentUser),n.isLogged=!0,t&&"function"==typeof t&&t()}function g(){n.intendedRoute?o.path(n.intendedRoute):o.path("/admin")}return{getUser:r,login:l,register:a,logout:i,storeToken:u,isLogged:s,postLoginOps:c,postLoginRouteHandler:g}}]);
//# sourceMappingURL=data:application/json;base64,
