angular.module("app",["ngRoute","ui.router"]),angular.module("app").run(["$http","$window",function(e,t){e.defaults.headers.common["x-auth"]=t.sessionStorage.user_token}]),angular.module("app").controller("addUserCtrl",["$scope","$http",function(e,t){e.setup=function(){e.model={}},e.setup(),e.saveUser=function(){console.log("inside the func"),t.post("/api/users",{first_name:e.model.first_name,last_name:e.model.last_name,phone:e.model.phone,address:e.model.address,email:e.model.email}).then(function(t){console.log(t),$("#thanks").show().delay(5e3).fadeOut(),e.setup()},function(e){console.log(e)})}}]),angular.module("app").controller("adminCtrl",["$scope","$http","auth","$location","$timeout",function(e,t,o,n,l){e.loading=!0,e.setup=function(){t.get("/api/users").then(function(t){e.model=t.data,e.loading=!1},function(t){401==t.status&&(e.authFail=!0,l(function(){n.path("/login")},3e3))})},e.setup(),e.deleteUser=function(o){confirm("Are you sure?")&&t["delete"]("/api/users/"+o).then(function(t){console.log(t),e.setup()},function(e){console.log(e)})},e.logout=function(){o.logout()}}]),angular.module("app").controller("editUserCtrl",["$scope","$http","$location","$stateParams","$timeout",function(e,t,o,n,l){e.loading=!0,e.setup=function(){console.log(n),t.get("/api/users/"+n.id).then(function(t){e.model=t.data,console.log(e.model),e.loading=!1},function(e){console.log(e)})},e.updateUser=function(){e.loading=!0,t.put("/api/users/"+n.id,{first_name:e.model.first_name,last_name:e.model.last_name,phone:e.model.phone,address:e.model.address,email:e.model.email}).then(function(t){console.log(t),e.loading=!1,e.userSaved=!0,l(function(){e.userSaved=!1},3e3)},function(e){console.log(e)})},e.setup()}]),angular.module("app").controller("loginCtrl",["$scope","auth","$location","$timeout",function(e,t,o,n){console.log("login controller"),e.authFail=!1,e.login=function(o,l){t.login(o,l).then(function(e){t.storeToken(e.data,function(){t.getUser().then(function(e){t.postLoginOps(e.data,function(){t.postLoginRouteHandler()})})})})["catch"](function(t){console.error("Gists error",t.status,t.data),401==t.status&&(e.authFail=!0,n(function(){e.authFail=!1},3e3))})["finally"](function(){console.log("finally finished gists")})}}]),angular.module("app").controller("masterCtrl",["$scope","$rootScope","$route",function(e,t,o){console.log("masterCtrl"),localStorage.getItem("logged_user")&&(t.currentUser=localStorage.getItem("logged_user")),e.$on("login",function(o,n){console.log("Logged In"),e.currentUser=n,t.currentUser=n,localStorage.setItem("logged_user",t.currentUser.username)})}]),angular.module("app").controller("registerCtrl",["$scope","auth","$location",function(e,t,o){e.register=function(n,l,r){t.register(n,l,r).then(function(n){t.login(l,r),e.$emit("login",n.data),o.path("/admin")})["catch"](function(e){console.log(e)})}}]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,o){t.otherwise("/"),e.state("app",{url:"/",views:{content:{templateUrl:"/landing.html",controller:"userRegisterCtrl"}}}).state("login",{url:"/login",views:{content:{templateUrl:"/login.html",controller:"loginCtrl"}}}).state("register",{url:"/efb82ec7a1a0e477a33e209dacd2a1e0",views:{content:{templateUrl:"/register.html",controller:"registerCtrl"}}}).state("admin",{url:"/admin",views:{nav:{templateUrl:"/nav.html",controller:"adminCtrl"},content:{templateUrl:"/admin.html",controller:"adminCtrl"}}}).state("admin.new",{url:"/new",views:{"content@":{templateUrl:"/addUser.html",controller:"addUserCtrl"}}}).state("admin.details",{url:"/:id",views:{"content@":{templateUrl:"editUser.html",controller:"editUserCtrl"}}}),o.html5Mode(!0)}]),angular.module("app").controller("userRegisterCtrl",["$scope","$http",function(e,t){console.log("here in landing")}]),angular.module("app").service("auth",["$http","$window","$location","$rootScope",function(e,t,o,n){function l(){return e.get("api/admin")}function r(t,o){return e.post("api/sessions",{username:t,password:o})}function a(t,o,n){return e.post("api/admin",{name:t,username:o,password:n})}function s(){localStorage.removeItem("user_token"),localStorage.removeItem("logged_user"),t.sessionStorage.removeItem("user_token"),delete e.defaults.headers.common["x-auth"],n.isLogged=!1,n.currentUser=null,o.path("/login")}function i(o,n){t.sessionStorage.user_token=o,localStorage.setItem("user_token",o),e.defaults.headers.common["x-auth"]=t.sessionStorage.user_token,n&&"function"==typeof n&&n()}function u(){}function c(e,t){n.currentUser=e.name,localStorage.setItem("logged_user",n.currentUser),n.isLogged=!0,t&&"function"==typeof t&&t()}function d(){n.intendedRoute?o.path(n.intendedRoute):o.path("/admin")}return{getUser:l,login:r,register:a,logout:s,storeToken:i,isLogged:u,postLoginOps:c,postLoginRouteHandler:d}}]);
//# sourceMappingURL=data:application/json;base64,
